import plugin.domain.Json
import plugin.domain.Map
import plugin.domain.Xml

import java.nio.charset.StandardCharsets

plugins {
	id 'java'
	id 'org.jetbrains.intellij' version '0.6.5'
}

group 'com.github.adamwojszczyk'
version '0.2.0-SNAPSHOT'

repositories {
	mavenCentral()
}

intellij {
	version '2020.3'
}

patchPluginXml {
	untilBuild = '211.*'
	pluginDescription = """
    	<i>Light eye-friendly theme</i>
    	<br><br>
    	<b>Goals:</b>
    	<ul>
    		<li>healthy for eyes and good for a night's sleep => reducing blue light</li>
    		<li>readable => minimal and logical usage of colors and effects</li>
    	</ul>
    	<br>
    	I recommend to use night light system option with<br>
    	screen warm profile always on.<br>
    	sunny day: ~10% or even 0%<br>
    	night: ~60%<br>
    	<br>
    	<b>Reviewed & adjusted:</b>
    	<ul>
    		<li>Java</li>
    		<li>JavaScript</li>
    		<li>TypeScript</li>
    		<li>Python</li>
    		<li>PHP</li>
    		<li>Go</li>
    		<li>Groovy</li>
    	</ul>
    	<br>
    	<a href="https://github.com/adamwojszczyk/sepia-theme">On GitHub</a> | <a href="https://github.com/adamwojszczyk/sepia-theme/issues">Report an issue</a>
    	<br><br>
    	Font: Fira Code, Size: 18, Line-spacing: 1.1
    	<br>
    	<img src="https://raw.githubusercontent.com/adamwojszczyk/sepia-theme/master/screenshots/main-window.png" border="0" alt="Main window screenshot">
	"""

	changeNotes = """
		<i><b>0.2.0</b></i>
		<ul>
			<li>File status colors - adjusted</li>
			<li>File color -> Green (test background) - brighter</li>
			<li>Notification -> ToolWindow - brighter, border same as background</li>
		</ul>
		<i><b>0.1.0</b></i>
		<ul>
			<li>Java - reassigned variable/parameter - dotted line</li>
			<li>Python - reviewed & adjusted</li>
			<li>PHP - reviewed & adjusted</li>
			<li>JavaScript - reviewed & adjusted</li>
			<li>TypeScript - reviewed & adjusted</li>
			<li>Go - reviewed & adjusted</li>
			<li>Groovy - reviewed & adjusted</li>
		</ul>
		<i><b>0.0.4</b></i>
		<ul>
			<li>vcs editor gutter - darker</li>
		</ul>
		<i><b>0.0.3</b></i>
		<ul>
			<li>diff & merge - brighter</li>
			<li>diff & merge - silver color for deleted lines</li>
			<li>vcs editor gutter - brighter</li>
			<li>line numbers - darker</li>
			<li>warning underwave - darker</li>
		</ul>
		<i><b>0.0.2</b></i>
		<ul>
			<li>color diff & merge</li>
		</ul>
		<i><b>0.0.1</b></i>
		<ul>
			<li>initial release</li>
		</ul>
	"""
}

publishPlugin {
	channels 'stable'
	token = System.getenv('ORG_GRADLE_PROJECT_intellijPublishToken')
}

task generatePluginXml(type: Copy, group: "theme") {
	outputs.upToDateWhen { false }
	from "$projectDir/src/main/templates/"
	expand(new Map(new plugin.Plugin()).string())
	into "$projectDir/src/main/resources/"
}

task generateIntelliJTheme(group: "theme") {
	outputs.upToDateWhen { false }
	doLast {
		File file = file("$projectDir/src/main/resources/intellij.theme.json")
		file.setText(new Json(new plugin.Plugin().theme()).asString(), StandardCharsets.UTF_8.name())
	}
}

task generateIntelliJScheme(group: "theme") {
	outputs.upToDateWhen { false }
	doLast {
		File file = file("$projectDir/src/main/resources/intellij.scheme.xml")
		file.setText(new Xml(new plugin.Plugin().scheme()).asString(), StandardCharsets.UTF_8.name())
	}
}

task generateTheme(group: "theme") {
	dependsOn(generatePluginXml, generateIntelliJTheme, generateIntelliJScheme)
}

buildPlugin.dependsOn(generateTheme)
